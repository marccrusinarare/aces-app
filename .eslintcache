[{"C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\index.js":"1","C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\reportWebVitals.js":"2","C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\App.js":"3","C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\serviceWorker.js":"4","C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Home.js":"5","C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Login.js":"6","C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Set.js":"7","C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Queue.js":"8","C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Court.js":"9","C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Setting.js":"10"},{"size":642,"mtime":1611561627545,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1611494809287,"results":"13","hashOfConfig":"12"},{"size":3251,"mtime":1612666542212,"results":"14","hashOfConfig":"12"},{"size":5390,"mtime":1611494809289,"results":"15","hashOfConfig":"12"},{"size":547,"mtime":1611551952156,"results":"16","hashOfConfig":"12"},{"size":560,"mtime":1611562932781,"results":"17","hashOfConfig":"12"},{"size":8576,"mtime":1612669608332,"results":"18","hashOfConfig":"12"},{"size":1731,"mtime":1611738554987,"results":"19","hashOfConfig":"12"},{"size":1738,"mtime":1612671069102,"results":"20","hashOfConfig":"12"},{"size":1289,"mtime":1611738325862,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"daydll",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\index.js",[],["44","45"],"C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\reportWebVitals.js",[],"C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\App.js",[],"C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\serviceWorker.js",[],"C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Home.js",[],"C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Login.js",[],"C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Set.js",["46"],"import React, { Component } from 'react';\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport { HiOutlineUserAdd } from 'react-icons/hi';\r\nimport { BsCheckCircle } from 'react-icons/bs';\r\nimport { FcFullTrash } from 'react-icons/fc';\r\n\r\nconst initialState = {\r\n    password: '',\r\n    user: '',\r\n    users: [],\r\n    tempUsers: [],\r\n    selectedUsers: [],\r\n    queue: []\r\n}\r\n\r\nclass Set extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let data = JSON.parse(localStorage.getItem('data')) || null;\r\n        if (data) {\r\n            this.state = {\r\n                ...data,\r\n                selectedUsers: []\r\n            };\r\n        } else {\r\n            this.state = initialState;\r\n        }\r\n    }\r\n\r\n    handleInput = async (event) => {\r\n        var val = event.target.value;\r\n        await this.setState({ user: val.toUpperCase() })\r\n        \r\n        localStorage.setItem('data', JSON.stringify(this.state))\r\n    }\r\n\r\n    handleInputPw = (event) => {\r\n        var val = event.target.value;\r\n        this.setState({ password: val })\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        let users = this.state.users; \r\n        users.push({\r\n            name: this.state.user,\r\n            id: this.state.users.length,\r\n            checked: false,\r\n            sc: 0,\r\n            total: 0,\r\n            court: {\r\n                hours: [],\r\n                total: 0\r\n            }\r\n        })\r\n        this.setState({users: [ ...users ], user: ''})\r\n    }\r\n    handleInputCheckbox = async (event) => {\r\n        let users = this.state.users; \r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        console.log('value', value)\r\n        const id = parseInt(target.id);\r\n        users.forEach((user, i) => {\r\n            if(user.id === id) {\r\n                users[i] = {\r\n                    ...user,\r\n                    checked: value\r\n                }\r\n            }\r\n        });\r\n\r\n        let selectedUsers = await users.filter((user) => { return user.checked });\r\n        await this.setState({\r\n            selectedUsers: selectedUsers\r\n        })\r\n\r\n        if (selectedUsers.length === 4) {\r\n            await this.setState({\r\n                tempUsers: users,\r\n                users: selectedUsers\r\n            })\r\n        } else {\r\n            let tempUsers = this.state.tempUsers || [];\r\n            tempUsers.forEach((user, i) => {\r\n                if(user.id === id) {\r\n                    tempUsers[i] = {\r\n                        ...tempUsers[i],\r\n                        checked: value\r\n                    }\r\n                }\r\n            });\r\n            console.log('tempuser', tempUsers)\r\n            console.log('state', this.state)\r\n            await this.setState({\r\n                tempUsers: [],\r\n                users: (tempUsers.length > 0) ? tempUsers : users\r\n            })\r\n        }\r\n    }\r\n\r\n    play = () => {\r\n        let selectedUsers = this.state.selectedUsers;\r\n        let queue = this.state.queue;\r\n        let users = this.state.users;\r\n        users.map((user) => {\r\n            return user.checked = false;\r\n        })\r\n        queue.push(selectedUsers);\r\n        selectedUsers = [];\r\n\r\n        this.setState({\r\n            users: users,\r\n            queue: queue,\r\n            selectedUsers: []\r\n        })\r\n        this.compute();\r\n    }\r\n\r\n    compute = async () => {\r\n        let users = this.state.users;\r\n        let queue = this.state.queue;\r\n\r\n        users.forEach((user) => {\r\n            user.sc = 0;\r\n            user.total = 0;\r\n            queue.forEach(q => {\r\n                q.forEach(element => {\r\n                  if (element.name === user.name) {\r\n                    user.sc++;\r\n                    user.total = user.total + 20; \r\n                  }  \r\n                });\r\n            });\r\n        })\r\n        console.log('compute state', this.state)\r\n        await this.setState({\r\n            users: this.state.tempUsers,\r\n            menu: 'queue'\r\n        })\r\n        localStorage.setItem('data', JSON.stringify(this.state));\r\n        // this.props.history.push('/queue');\r\n        // this.props.navigate('queue')\r\n    }\r\n\r\n    remove = (event) => {\r\n        let ind = parseFloat(event.target.dataset.x);\r\n        let queue = this.state.queue;\r\n        let newQueue = [];\r\n        \r\n        queue.forEach((element, i) => {\r\n            if (i !== ind) {\r\n                newQueue.push(element);\r\n            }\r\n        });\r\n        \r\n        this.setState({\r\n            queue: newQueue\r\n        })\r\n        setTimeout(() => {\r\n            \r\n            this.compute();\r\n        }, 1000);\r\n    }\r\n\r\n    removeUser = async (event) => {\r\n        let ind = parseFloat(event.target.dataset.x);\r\n        console.log('remove clicked', ind, event)\r\n        let users = this.state.users;\r\n        let newUsers = [];\r\n        users.forEach(user => {\r\n            if(ind !== user.id)\r\n            newUsers.push(user);\r\n        });\r\n        \r\n        await this.setState({\r\n            users: newUsers\r\n        })\r\n        console.log('new users', newUsers)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <div> \r\n                    <Form className=\"full-block\">\r\n                        <Row>\r\n                            <Col xs={10} className=\"remove-padding-center\">\r\n                                <Form.Control color=\"primary\" type=\"text\" value={this.state.user} \r\n                                        onChange={this.handleInput} placeholder=\"Name of player\"/>\r\n                            </Col>\r\n                            <Col xs={2} className=\"remove-padding-center\">\r\n                                <Button className=\"full-block ra-button\" disabled={this.state.user === ''} onClick={this.handleClick} >\r\n                                    <HiOutlineUserAdd className=\"button__add-icon\"/> \r\n                                </Button> \r\n                            </Col>\r\n                                \r\n                            {/* <input type=\"text\" onInput={this.handleInput} value={this.state.user}/> */}\r\n                        </Row>\r\n                    </Form>\r\n                    <div className=\"flex-queue__container\">\r\n                        <div className=\"flex-queue\">\r\n                            {this.state.users.map((user, i) => (\r\n                                <label key={i} className={\"queue-member\" + ((user.checked) ? \" selected\":\"\")}> \r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        key={user.id} \r\n                                        id={user.id}\r\n                                        checked={user.checked}\r\n                                        onChange={this.handleInputCheckbox}\r\n                                        hidden/>\r\n                                        <div className=\"queue-icon\">\r\n                                            { (user.checked) ?\r\n                                                <BsCheckCircle /> : <div/>\r\n                                            }\r\n                                        </div>\r\n                                        <h6 className=\"name\">{user.name}</h6>\r\n                                        <small>{user.sc}SC &bull; ₱{user.total}</small> \r\n                                        {/* <button data-x={user.id} onClick={this.removeUser} className=\"remove-icon\">\r\n                                            <FcFullTrash />\r\n                                        </button> */}\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    { (this.state.selectedUsers.length > 0) ?\r\n                    <div>\r\n                        {/* <h2>Set:</h2> */}\r\n                            {/* {this.state.selectedUsers.map(user => (\r\n                                <div>\r\n                                    <label>\r\n                                        {user.name}\r\n                                    </label>\r\n                                </div>\r\n                            )\r\n                        )} */}\r\n                        <Button className=\"ra-button full-block\" onClick={this.play}>Play</Button>\r\n                    </div> \r\n                            : <div></div> \r\n                            }\r\n                    \r\n                </div>\r\n            </Container>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Set;","C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Queue.js",[],"C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Court.js",[],"C:\\Users\\Marc Jason Crusina\\Documents\\Development\\ReactJs\\aces-app\\src\\components\\Setting.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":5,"column":10,"nodeType":"53","messageId":"54","endLine":5,"endColumn":21},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'FcFullTrash' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]